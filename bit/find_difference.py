"""
given two strings s and t which consist of only two
lowercase letters
string t is generated by random shuffling string s and then
add one more letter at a random position. find the letter that was added in
it
for example :
input :
s = "abcd"  t是从
t = "abecd"
output: "e"

explanation:
'e' is the letter that was added
 We use the characteristic equation of XOR.
A xor B xor C = A xor C xor B
If A == C, then A xor C = 0
and then, B xor 0 =  B

"""
def find_difference(s, t):
  ret = 0
  for ch in s + t:
      #ord(ch) return an integer representing the unicode code point of that character

      ret = ret ^ ord(ch)
      #chr(i) return the string representing a character whose unicode points is the integer i

  return chr(ret)

"""
java 方法的解决
public  char class_solution(string a ,string b)
{
    char s = 0;
    for(int i=0;i<a.length();i++)
    {
        s = s ^ a.charAt(i);
    }
    for(int j=0;j<b.length();j++)
    {
        s = s ^ b.length(j);
    }
    return s
}
"""

if __name__ == '__main__':
    """  多个数做异或运算，改变顺序是无关的，a ^ a = 0，最终相同的元素 得到的结果是一串0，然后
      0和0做或与运算，是0 （然后一个数和0做或与运算都是回到本身），然后最终可以得到不一样的那个字母"""
    print(find_difference("abcd","cedba"))
    s = "abcd"
    b = "abdce"
    print(s+b)